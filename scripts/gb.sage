#!/home/tj/sage/sage --python

import sys
from sage.all import *

if len(sys.argv) < 3 :
    print "Usage: %s n f1 [... fk]"%sys.argv[0]
    print "Outputs the groebner basis of the ideal over n variables generated by f1 .. fk"
    sys.exit(1)

numvars = int(sys.argv[1]);

#BooleanPolynomialRing takes field equations into consideration
R = BooleanPolynomialRing(numvars,'x')

vars = {'R':R}
sage_eval('None',cmds='R.inject_variables();',locals = vars)

I = R.ideal([sage_eval(f,locals=vars) for f in sys.argv[2:]])
 #make ideal over R

B = I.groebner_basis();

#print B

#get the polynomials in ANF (basically just by distributing any terms
#that can be distributed)

ANF = [expand(f) for f in B]

print ANF



