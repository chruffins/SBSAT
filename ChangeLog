	* src/solv_smurf/hr_berkmin/hr_berkmin.cc, src/utils/params.cc:
	Made small fixes to berkmin heuristic.

	* src/solv_smurf/hr_berkmin/hr_berkmin.cc: Fixed BerkMin ~Anne

	* src/utils/bdd.cc: fixed minmax yet again.

	* src/utils/bdd.cc: Fixed a minmax detection error found by Dr. Franco

	* src/solv_smurf/hr_berkmin/hr_berkmin.cc, src/solv_smurf/include/fn_lemma.h, src/utils/bdd_print.cc:
	Letting all of the solver have access to pLPQFirst.

	* doc/man1/sbsat.1, include/common.h, include/prototypes.h, include/sbsat_preproc.h, include/sbsat_vars.h, scripts/sbsatlemmas.php, src/formats/markbdd.cc, src/preproc/Makefile.am, src/preproc/Makefile.in, src/preproc/do_extendres.cc, src/preproc/init_preproc.cc, src/preproc/other_preproc.cc, src/preproc/preprocess.cc, src/solv_smurf/br_backtrack.cc, src/utils/bdd_circuit_init.cc, src/utils/bdd_print.cc, src/utils/params.cc, src/utils/vars.cc:
	added lots of printing routines to support the .dot format.

	* src/solv_smurf/hr_vsids/hr_vsids.cc: Fixed VSIDS code. ~Anne

	* src/solv_smurf/hr_vsids/hr_vsids.cc: Adding VSIDS again. ~anne

	* configure, doc/man1/sbsat.1, include/config.h, include/config.h.in:
	Added vsids heuristic. ~Anne

	* doc/man1/sbsat.1, include/prototypes.h, src/formats/markbdd.cc, src/formats/write_output.cc, src/solv_smurf/fn_lemma/lemmacache.cc, src/utils/bdd_print.cc:
	Added in support for creating .dot files which can be turned into graphs
	using 'dot' from the graphvis package.

	* src/solv_smurf/include/hr_lemma.h, src/solv_smurf/include/solver.h, src/solv_wvf/Makefile.in, src/utils/Makefile.in, src/utils/params.cc, tests/Makefile.in, tests/cnf/Makefile.in, tests/longer_tests/Makefile.in, tests/trace_tests/Makefile.in, Makefile.in, aclocal.m4, configure, configure.ac, doc/Makefile.in, doc/man1/Makefile.in, doc/man1/sbsat.1, examples/Makefile.in, include/Makefile.in, include/config.h, src/Makefile.am, src/Makefile.in, src/formats/5/Makefile.in, src/formats/Makefile.in, src/generator/Makefile.in, src/postproc/Makefile.in, src/preproc/Makefile.in, src/solv_bddwalk/Makefile.in, src/solv_simple/Makefile.in, src/solv_smurf/Makefile.am, src/solv_smurf/Makefile.in, src/solv_smurf/fn_and/Makefile.in, src/solv_smurf/fn_lemma/Makefile.in, src/solv_smurf/fn_lemma_au/Makefile.in, src/solv_smurf/fn_minmax/Makefile.in, src/solv_smurf/fn_smurf/Makefile.in, src/solv_smurf/fn_smurf_au/Makefile.in, src/solv_smurf/fn_smurf_xor/Makefile.in, src/solv_smurf/fn_xor/Makefile.in, src/solv_smurf/fn_xor_smurf/Makefile.in, src/solv_smurf/hr_anne/Makefile.am, src/solv_smurf/hr_anne/Makefile.in, src/solv_smurf/hr_anne/hr_anne.cc, src/solv_smurf/hr_anne/hr_anne_update.cc, src/solv_smurf/hr_anne/hr_choice.cc, src/solv_smurf/hr_berkmin/Makefile.am, src/solv_smurf/hr_berkmin/Makefile.in, src/solv_smurf/hr_berkmin/hr_berkmin.cc, src/solv_smurf/hr_berkmin/hr_berkmin_update.cc, src/solv_smurf/hr_berkmin/hr_choice.cc, src/solv_smurf/hr_lemma/Makefile.in, src/solv_smurf/hr_lemma/hr_lemma.cc, src/solv_smurf/hr_lemma/hr_lemma_update.cc, src/solv_smurf/hr_lsgb/Makefile.in, src/solv_smurf/hr_lsgb_lemma/Makefile.in, src/solv_smurf/hr_lsgbw/Makefile.in, src/solv_smurf/hr_null/Makefile.in, src/solv_smurf/hr_vsids/Makefile.am, src/solv_smurf/hr_vsids/Makefile.in, src/solv_smurf/hr_vsids/hr_choice.cc, src/solv_smurf/hr_vsids/hr_vsids.cc, src/solv_smurf/hr_vsids/hr_vsids_update.cc, src/solv_smurf/include/Makefile.in, src/solv_smurf/include/heuristic.h, src/solv_smurf/solver.cc:
	Added the structures for 3 new lemma heuristics - VSIDS, BerkMin, and Anne's
	heuristic sandbox.

	* src/solv_smurf/br_checks.cc:
	re-added the ability to dump lemmas to a file.

	* include/config.h, include/config.h.in, src/solv_smurf/br_backtrack.cc:
	It all seems to be working (slide-lemmas that is).

	* src/solv_smurf/br_backtrack.cc:
	This is a little tricky. May have uncovered a long hidden bug that caused
	some non-UIP lemmas to be identified as UIP lemmas. It doesn't affect the
	outcome, just slows down sbsat a bit.

	* src/solv_smurf/fn_create.cc, src/solv_smurf/fn_lemma/lemmacache.cc, src/solv_smurf/fn_lemma/lemmamisc.cc, src/solv_smurf/fn_lemma/lemmas.cc:
	I am pretty sure SlideLemmas is working...

	* src/solv_smurf/br_backtrack.cc, src/solv_smurf/fn_create.cc, src/solv_smurf/fn_lemma/lemmamisc.cc, src/solv_smurf/fn_lemma/lemmas.cc, src/solv_smurf/include/fn_lemma.h:
	SlideLemma working?

	* src/preproc/equivclass.cc, src/solv_smurf/fn_create.cc, src/solv_smurf/fn_lemma/lemmamisc.cc, src/solv_smurf/include/solver.h:
	Fixing slide_lemmas. Seems to work.

	* src/solv_smurf/fn_lemma/lemmamisc.cc: SlideLemma is maybe fixed now.

	* src/formats/cnf.cc:
	Removed pow() function. It was causing problems w/ freebsd

	* src/formats/cnf.cc: bug fixing.

	* include/common.h, src/formats/cnf.cc:
	Added in Marijn's XOR detection functionality into cnf.cc

	* src/formats/cnf.cc:
	Added functionality to sort clauses and remove duplicates. This is a prelude
	for finding xors and probably rewriting the rest of it.

	* src/solv_smurf/br_backtrack.cc, src/solv_smurf/fn_lemma/lemmamisc.cc, src/solv_smurf/include/fn_lemma.h:
	Fixing SlideLemma...still broke, hopefully not for long.

	* configure, include/config.h, include/config.h.in, src/solv_smurf/fn_lemma/lemmamisc.cc:
	Modified SlideLemma function.

	* include/prototypes.h: Done with my part of the --slide-lemmas code.

	* src/preproc/do_identify_same_structure.cc, src/solv_smurf/fn_create.cc, src/solv_smurf/vars_map.cc, src/utils/bdd.cc:
	Done with my part of the --slide-lemma code.

	* doc/man1/sbsat.1, src/preproc/do_identify_same_structure.cc, src/utils/bdd.cc, src/utils/params.cc:
	Almost completed the IS preprocessing method which sets up some data
	structures for use with --slide-lemmas.

	* src/solv_smurf/br_backtrack.cc, src/solv_smurf/fn_lemma/bt_lemmas.cc, src/solv_smurf/fn_lemma/fn_lemma.cc, src/solv_smurf/fn_lemma/lemmas.cc, src/solv_smurf/fn_lemma/lemmaspace.cc, src/solv_smurf/fn_smurf/bt_smurf.cc, src/solv_smurf/vars_inferlit.cc:
	slide-lemmas seems to be working in the cases it needs to. For the future,
	need to attach a LemmaInfoStruct every time InferLiteral is called.

   * src/solv_smurf/br_backtrack.cc, src/solv_smurf/fn_lemma/fn_lemma.cc, src/solv_smurf/fn_lemma/fn_lemma_backtrack.cc, src/solv_smurf/fn_lemma/lemmas.cc, src/solv_smurf/fn_smurf/bt_smurf.cc, src/solv_smurf/include/fn_lemma.h, src/solv_smurf/include/solver.h, src/solv_smurf/vars_inferlit.cc, src/utils/params.cc:
	Adding in the ability to slide lemmas via the --slide-lemmas command line
	flag. Broken right now, but it is being fixed.

   * src/preproc/do_applyinfs.cc:
	New rule added. If x=y and either x or y is independent, then both become
	independent.

	* src/formats/bdd2cnf.cc:
	Keeping with dimacs tradition, added a 0 to the end of the list of
	independent variables.

   * src/preproc/Makefile.am, src/preproc/Makefile.in, src/preproc/preprocess.cc, src/solv_smurf/br_backtrack.cc, src/solv_smurf/fn_lemma/lemmamisc.cc, src/solv_smurf/include/fn_lemma.h, src/utils/params.cc, src/utils/vars.cc:
	Adding structure to slide lemmas.

   * src/utils/params.cc:
	Made --help comment a little more discriptive for --print-indep

   * include/sbsat_vars.h, src/formats/bdd2cnf.cc, src/utils/params.cc, src/utils/vars.cc:
	Added a new command line flag which will print (for CNF, in a comment) a
	list of independent variables associated with the CNF, as found by the SBSAT
	preprocessor. --print-indep <number>

	* doc/manual/sbsat_user_manual.tex, src/preproc/other_preproc.cc, src/solv_smurf/vars_verify.cc:
	modified user manual a tad, --max-brancher-time to --max-solver-time
	removed some traces of autarky bdds.

	* doc/man1/sbsat.1, src/solv_smurf/fn_lemma_au/fn_lemma_au.cc:
	fixed a small warning in an unused function

   * src/preproc/do_ex_safe_cluster.cc, src/solv_bddwalk/bddwalk.cc:
	--max-solver-time can now be used to control bddwalksat.

	* include/params.h, include/sbsat_vars.h, src/generator/testite.sh, src/preproc/do_applyinfs.cc, src/preproc/equivclass.cc, src/solv_simple/solve_simple.cc, src/solv_smurf/features/crtwin.cc, src/solver/crtwin.cc, src/utils/params.cc, src/utils/utils.cc, src/utils/vars.cc, doc/man1/sbsat.1, include/equivclass.h:
	Hopefully fixed Gaussian Elimination.

	Also changed the size of filename strings from 128 to 256.

	* src/solv_simple/solve_simple.cc:
	fixed scoping warning for the compiler on boole.

	* src/solv_simple/solve_simple.cc, src/solv_smurf/display.cc:
	Added some display info, and ability to find multiple solutions into Simple
	Solver.

	* src/solv_simple/solve_simple.cc:
	Fixed a major bug which could cause the problem to be SAT instead of UNSAT
	and vise-a-versa...Whoops! Also sped up the smurf creation by stopping early
	when identical smurfs have already been created.

	* include/sbsat_preproc.h, src/preproc/do_applyinfs.cc, src/preproc/do_clearft.cc, src/preproc/do_cofactor.cc, src/preproc/do_depcluster.cc, src/preproc/do_ex_safe_cluster.cc, src/preproc/do_exquantify.cc, src/preproc/do_exquantifyand.cc, src/preproc/do_prover3.cc, src/preproc/do_pruning.cc, src/preproc/do_rewind.cc, src/preproc/do_safesearch.cc, src/preproc/do_simpleand.cc, src/preproc/do_split.cc, src/preproc/do_strength.cc, src/preproc/init_preproc.cc, src/sbsat.cc:
	removed autarky BDD code.
	fixed up the clustering functions to start using 'num_funcs_var_occurs'
	instead of looping through the 'amount' linked list.

	* src/utils/java_wrapper.cc, src/utils/llist.cc, src/utils/log.cc, src/utils/params.cc, src/utils/params_fn.cc, src/utils/symtable.cc, src/utils/termcap.cc, src/utils/utils.cc, src/utils/vars.cc, src/utils/zread.cc, tests/longer_tests/12.trace.gz, tests/longer_tests/4.trace.gz, include/bdd_ite.h, include/bddnode.h, include/bddtable.h, include/common.h, include/equivclass.h, include/log.h, include/params.h, include/prototypes.h, include/sbsat.h, include/sbsat_features.h, include/sbsat_formats.h, include/sbsat_headers.h, include/sbsat_interface.h, include/sbsat_postproc.h, include/sbsat_preproc.h, include/sbsat_solver.h, include/sbsat_utils.h, include/sbsat_vars.h, include/symtable.h, src/empty.cc, src/emptylib.cc, src/formats/5/bddnode.cc, src/formats/5/bddops.cc, src/formats/5/functions.cc, src/formats/5/functions.h, src/formats/5/p3.cc, src/formats/5/p3.h, src/formats/5/parser.cc, src/formats/5/tracetest.cc, src/formats/autochk.cc, src/formats/bdd2cnf.cc, src/formats/bddbinary.cc, src/formats/cnf.cc, src/formats/markbdd.cc, src/formats/read_input.cc, src/formats/read_result.cc, src/formats/sat.cc, src/formats/smurf.cc, src/formats/write_output.cc, src/formats/xorbdd.cc, src/generator/gentest.cc, src/generator/rand_bdd.cc, src/generator/rn.cc, src/generator/slider2.cc, src/generator/vanDerWaerden.cc, src/generator/xorgen.cc, src/postproc/backend.cc, src/preproc/create_infs.cc, src/preproc/do_applyinfs.cc, src/preproc/do_clearft.cc, src/preproc/do_cofactor.cc, src/preproc/do_depcluster.cc, src/preproc/do_ex_safe_cluster.cc, src/preproc/do_exquantify.cc, src/preproc/do_exquantifyand.cc, src/preproc/do_findft.cc, src/preproc/do_flow.cc, src/preproc/do_possibleanding.cc, src/preproc/do_prover3.cc, src/preproc/do_pruning.cc, src/preproc/do_pruning_1.cc, src/preproc/do_pruning_2.cc, src/preproc/do_pruning_pr.cc, src/preproc/do_pruning_restrict.cc, src/preproc/do_rewind.cc, src/preproc/do_safeassign.cc, src/preproc/do_safesearch.cc, src/preproc/do_simpleand.cc, src/preproc/do_split.cc, src/preproc/do_steal.cc, src/preproc/do_strength.cc, src/preproc/equivclass.cc, src/preproc/init_preproc.cc, src/preproc/other_preproc.cc, src/preproc/preprocess.cc, src/sbsat.cc, src/solv_bddwalk/bddwalk.cc, src/solv_smurf/br_afs.cc, src/solv_smurf/br_backtrack.cc, src/solv_smurf/br_backtrack_nl.cc, src/solv_smurf/br_backtrack_sbj.cc, src/solv_smurf/br_brancher.cc, src/solv_smurf/br_checks.cc, src/solv_smurf/br_init.cc, src/solv_smurf/br_select_bp.cc, src/solv_smurf/display.cc, src/solv_smurf/display_sf.cc, src/solv_smurf/features/autarky.cc, src/solv_smurf/features/breakxors.cc, src/solv_smurf/features/crtwin.cc, src/solv_smurf/features/interface.cc, src/solv_smurf/features/ksolve.cc, src/solv_smurf/fn_and/bdd2specfn_and.cc, src/solv_smurf/fn_and/bt_specfn_and.cc, src/solv_smurf/fn_and/fn_and.cc, src/solv_smurf/fn_and/hr_lsgb_and_init.cc, src/solv_smurf/fn_and/hr_lsgb_and_update.cc, src/solv_smurf/fn_and/hr_lsgbw_and_init.cc, src/solv_smurf/fn_and/hr_lsgbw_and_update.cc, src/solv_smurf/fn_and/lemmas_and.cc, src/solv_smurf/fn_create.cc, src/solv_smurf/fn_init.cc, src/solv_smurf/fn_lemma/bt_lemmas.cc, src/solv_smurf/fn_lemma/fn_lemma.cc, src/solv_smurf/fn_lemma/fn_lemma_backtrack.cc, src/solv_smurf/fn_lemma/lemmacache.cc, src/solv_smurf/fn_lemma/lemmainfo.cc, src/solv_smurf/fn_lemma/lemmamisc.cc, src/solv_smurf/fn_lemma/lemmas.cc, src/solv_smurf/fn_lemma/lemmaspace.cc, src/solv_smurf/fn_lemma/lemmawlits.cc, src/solv_smurf/fn_lemma/load_lemmas.cc, src/solv_smurf/fn_lemma_au/bt_lemmas_au.cc, src/solv_smurf/fn_lemma_au/fn_lemma_au.cc, src/solv_smurf/fn_lemma_au/lemmacache_au.cc, src/solv_smurf/fn_lemma_au/lemmas_au.cc, src/solv_smurf/fn_lemma_au/lemmawlits_au.cc, src/solv_smurf/fn_minmax/bdd2specfn_minmax.cc, src/solv_smurf/fn_minmax/bt_specfn_minmax.cc, src/solv_smurf/fn_minmax/fn_minmax.cc, src/solv_smurf/fn_minmax/hr_lsgb_minmax.cc, src/solv_smurf/fn_plainor/fn_plainor.cc, src/solv_smurf/fn_smurf/bdd2smurf.cc, src/solv_smurf/fn_smurf/bt_smurf.cc, src/solv_smurf/fn_smurf/fn_smurf.cc, src/solv_smurf/fn_smurf/hr_lsgb_smurf_init.cc, src/solv_smurf/fn_smurf/hr_lsgb_smurf_update.cc, src/solv_smurf/fn_smurf/hr_lsgbw_smurf_init.cc, src/solv_smurf/fn_smurf/hr_lsgbw_smurf_update.cc, src/solv_smurf/fn_smurf/smurfstates.cc, src/solv_smurf/fn_smurf/transitions.cc, src/solv_smurf/fn_smurf_au/bdd2smurf_au.cc, src/solv_smurf/fn_smurf_au/bt_smurf_au.cc, src/solv_smurf/fn_smurf_au/fn_smurf_au.cc, src/solv_smurf/fn_smurf_au/smurfstates_au.cc, src/solv_smurf/fn_smurf_au/transitions_au.cc, src/solv_smurf/fn_smurf_xor/fn_smurf_xor.cc, src/solv_smurf/fn_smurf_xor/hr_lsgb_smurfxor_init.cc, src/solv_smurf/fn_smurf_xor/hr_lsgb_smurfxor_update.cc, src/solv_smurf/fn_smurf_xor/hr_lsgbw_smurfxor_init.cc, src/solv_smurf/fn_smurf_xor/hr_lsgbw_smurfxor_update.cc, src/solv_smurf/fn_stack.cc, src/solv_smurf/fn_update.cc, src/solv_smurf/fn_xor/bdd2specfn_xor.cc, src/solv_smurf/fn_xor/bt_specfn_xor.cc, src/solv_smurf/fn_xor/fn_xor.cc, src/solv_smurf/fn_xor/hr_lsgb_xor.cc, src/solv_smurf/fn_xor/hr_lsgbw_xor.cc, src/solv_smurf/fn_xor/lemmas_xor.cc, src/solv_smurf/fn_xor_smurf/fn_xor_smurf.cc, src/solv_smurf/fn_xor_smurf/hr_lsgb_xorsmurf.cc, src/solv_smurf/fn_xor_smurf/hr_lsgbw_xorsmurf.cc, src/solv_smurf/hr_choice.cc, src/solv_smurf/hr_inter/heur_i.cc, src/solv_smurf/hr_inter/hr_inter.cc, src/solv_smurf/hr_lemma/hr_choice.cc, src/solv_smurf/hr_lemma/hr_lemma.cc, src/solv_smurf/hr_lemma/hr_lemma_update.cc, src/solv_smurf/hr_lsgb/hr_choice.cc, src/solv_smurf/hr_lsgb/hr_lsgb.cc, src/solv_smurf/hr_lsgb/hr_stack.cc, src/solv_smurf/hr_lsgb_lemma/hr_choice.cc, src/solv_smurf/hr_lsgb_lemma/hr_lsgb_lemma.cc, src/solv_smurf/hr_lsgbw/hr_lsgbw.cc, src/solv_smurf/hr_lsgbw/hr_lsgbw_init.cc, src/solv_smurf/hr_null/hr_null.cc, src/solv_smurf/include/brancher.h, src/solv_smurf/include/fn_and.h, src/solv_smurf/include/fn_lemma.h, src/solv_smurf/include/fn_minmax.h, src/solv_smurf/include/fn_plainor.h, src/solv_smurf/include/fn_smurf.h, src/solv_smurf/include/fn_smurf_au.h, src/solv_smurf/include/fn_smurf_xor.h, src/solv_smurf/include/fn_xor.h, src/solv_smurf/include/fn_xor_smurf.h, src/solv_smurf/include/heur_i.h, src/solv_smurf/include/heuristic.h, src/solv_smurf/include/hr_lemma.h, src/solv_smurf/include/hr_lsgb.h, src/solv_smurf/include/hr_lsgb_lemma.h, src/solv_smurf/include/hr_lsgbw.h, src/solv_smurf/include/hr_null.h, src/solv_smurf/include/solver.h, src/solv_smurf/include/solver_features.h, src/solv_smurf/solver.cc, src/solv_smurf/vars_hints.cc, src/solv_smurf/vars_inferlit.cc, src/solv_smurf/vars_init.cc, src/solv_smurf/vars_initinfs.cc, src/solv_smurf/vars_map.cc, src/solv_smurf/vars_recordsol.cc, src/solv_smurf/vars_verify.cc, src/solv_wvf/wvf.cc, src/solver/autarky.cc, src/solver/backtrack.cc, src/solver/backtrack_nl.cc, src/solver/backtrack_sbj.cc, src/solver/bdd2smurf.cc, src/solver/bdd2specfn_and.cc, src/solver/bdd2specfn_minmax.cc, src/solver/bdd2specfn_xor.cc, src/solver/bddwalk.cc, src/solver/brancher.cc, src/solver/bt_lemmas.cc, src/solver/bt_misc.cc, src/solver/bt_smurfs.cc, src/solver/bt_specfn.cc, src/solver/bt_specfn_and.cc, src/solver/bt_specfn_minmax.cc, src/solver/bt_specfn_xor.cc, src/solver/crtwin.cc, src/solver/display.cc, src/solver/display_sf.cc, src/solver/heur_choice.cc, src/solver/heur_stack.cc, src/solver/heuristic.cc, src/solver/i_heuristic.cc, src/solver/init_solver.cc, src/solver/interface.cc, src/solver/j_heuristic.cc, src/solver/j_smurf.cc, src/solver/j_specfn.cc, src/solver/j_specfn_and.cc, src/solver/j_specfn_minmax.cc, src/solver/j_specfn_xor.cc, src/solver/j_update_heu.cc, src/solver/ksolve.cc, src/solver/l_heuristic.cc, src/solver/l_lemma.cc, src/solver/lemmacache.cc, src/solver/lemmainfo.cc, src/solver/lemmamisc.cc, src/solver/lemmas.cc, src/solver/lemmas_and.cc, src/solver/lemmas_minmax.cc, src/solver/lemmas_xor.cc, src/solver/lemmaspace.cc, src/solver/lemmawlits.cc, src/solver/libsolver.cc, src/solver/load_lemmas.cc, src/solver/recordsol.cc, src/solver/select_bp.cc, src/solver/smurffactory.cc, src/solver/smurfstates.cc, src/solver/solve.cc, src/solver/state_stacks.cc, src/solver/transitions.cc, src/solver/update_heu.cc, src/solver/verify.cc, src/solver/wvf.cc, src/utils/bdd.cc, src/utils/bdd_circuit_init.cc, src/utils/bdd_ite.cc, src/utils/bdd_print.cc, src/utils/bddtable.cc, src/utils/custprint.cc, src/utils/itetable.cc, COPYING, README, doc/man1/sbsat.1, doc/manual/manual.tar:
	Updated copyright to be 1999-2007

   * src/formats/xorbdd.cc:
	During translations to the xor format, SBSAT prints the symbol-table in the
	header.

   * src/formats/xorbdd.cc:
	Fixed small memory problem with reading LARGE xor format files.

	Added a new output format - xor. Works with and without symbol table - more
	testing required.

	* doc/manual/sbsat_manual.pdf, doc/manual/sbsat_manual.ps, doc/manual/sbsat_manual.tex, doc/manual/sbsat_user_manual.tex, doc/manual/Makefile, doc/manual/Makefile.am, doc/manual/Makefile.in, doc/manual/sbsat_getting.aux, doc/manual/sbsat_getting.dvi, doc/manual/sbsat_getting.html, doc/manual/sbsat_getting.log, doc/manual/sbsat_getting.lyx, doc/manual/sbsat_getting.pdf, doc/manual/sbsat_getting.ps, doc/manual/sbsat_getting.tex, doc/manual/sbsat_getting.toc, doc/manual/sbsat_manual.css, doc/manual/sbsat_manual.html, doc/manual/sbsat_manual.lyx:
	Only one manual now - sbsat_user_manual

	* src/utils/params.cc:
	Accidentially removed the NO_LEMMAS flag - fixed.

	* doc/manual/sbsat_getting.ps, doc/manual/sbsat_getting.tex, doc/manual/sbsat_getting.toc, src/formats/smurf.cc, src/formats/xorbdd.cc, doc/manual/sbsat_getting.aux, doc/manual/sbsat_getting.dvi, doc/manual/sbsat_getting.log, doc/manual/sbsat_getting.pdf:
	finished user manual...for now - still a lot to do.

   * doc/manual/sbsat_getting.ps, doc/manual/sbsat_getting.tex, doc/manual/sbsat_getting.toc, src/formats/xorbdd.cc, src/utils/params.cc, doc/manual/sbsat_getting.aux, doc/manual/sbsat_getting.dvi, doc/manual/sbsat_getting.log, doc/manual/sbsat_getting.pdf:
	modifying user manual, and also getting code to work nicely with it.

 	* doc/manual/sbsat_getting.aux, doc/manual/sbsat_getting.dvi, doc/manual/sbsat_getting.log, doc/manual/sbsat_getting.pdf, doc/manual/sbsat_getting.ps, doc/manual/sbsat_getting.tex, doc/manual/sbsat_getting.toc:
	modifying user manual. About half done.

	* src/utils/params.cc: modifying things for the user manual.

	* src/preproc/do_ex_safe_cluster.cc, src/utils/params.cc, src/utils/params_fn.cc:
	fixed printing of [inputfile [outputfile]]

	* src/formats/bdd2cnf.cc:
	fixed an 'off by one' error when displaying symbolic names for automatically
	translated CNF files.

	   ~Sean
